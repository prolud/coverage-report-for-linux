"use strict";var v=Object.create;var s=Object.defineProperty;var g=Object.getOwnPropertyDescriptor;var h=Object.getOwnPropertyNames;var m=Object.getPrototypeOf,l=Object.prototype.hasOwnProperty;var d=(e,o)=>{for(var t in o)s(e,t,{get:o[t],enumerable:!0})},i=(e,o,t,a)=>{if(o&&typeof o=="object"||typeof o=="function")for(let n of h(o))!l.call(e,n)&&n!==t&&s(e,n,{get:()=>o[n],enumerable:!(a=g(o,n))||a.enumerable});return e};var c=(e,o,t)=>(t=e!=null?v(m(e)):{},i(o||!e||!e.__esModule?s(t,"default",{value:e,enumerable:!0}):t,e)),f=e=>i(s({},"__esModule",{value:!0}),e);var x={};d(x,{activate:()=>u,deactivate:()=>w});module.exports=f(x);var r=c(require("vscode")),p=c(require("path"));function u(e){console.log('Extension "coverage-report-for-linux" is now active!');let o=r.commands.registerCommand("coverage-report-for-linux.generatecoveragereport",()=>{r.window.showInformationMessage("Generating Coverage Report Using Bash");let t=p.join(e.extensionPath,"run_coverage.sh");r.window.createTerminal({name:"Coverage Report",shellPath:"/bin/bash",shellArgs:["-c",`"${t}"`]}).show()});e.subscriptions.push(o)}function w(){}0&&(module.exports={activate,deactivate});
